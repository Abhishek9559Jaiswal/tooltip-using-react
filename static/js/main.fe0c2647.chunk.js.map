{"version":3,"sources":["Components/toDos/AddTaskForm.js","Components/toDos/UpdateForm.js","Components/toDos/ToDo.js","Components/TodoContainer.js","App.js","index.js"],"names":["AddTaskForm","props","React","createElement","Fragment","className","value","newTask","onChange","e","setNewTask","target","type","onClick","addTask","UpdateForm","updateData","title","changeTask","updateTask","cancelUpdate","ToDo","toDo","map","task","index","key","id","completed","markDone","FontAwesomeIcon","icon","faCircleCheck","setUpdateData","faPen","deleteTask","faTrashCan","TodoContainer","_useState","useState","jsonTodos","_useState2","_slicedToArray","setToDo","_useState3","_useState4","_useState5","_useState6","newEntry","filterRecord","_toConsumableArray","filter","UpdatedObject","concat","Date","now","completeTask","_objectSpread","newTasks","App","json","setjson","loading","setLoading","useEffect","fetch","then","response","setTimeout","Bars","height","width","color","ariaLabel","visible","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.fe0c2647.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// --------AddTask Component-------------------//\r\n\r\nconst AddTaskForm = (props) => {\r\n    // here we got props object as newTask , add Task , \r\n    return (\r\n        //------------   Add a new Task --------------//\r\n        <>\r\n            <div className=\"row mb-3\">\r\n                <div className=\"col\">\r\n                    <input\r\n                        value={props.newTask}\r\n                        onChange={(e) => props.setNewTask(e.target.value)}\r\n                        className='form-control form-control-lg'\r\n                        type=\"text\" />\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    {/* --------Add Task Button----------- */}\r\n                    <button\r\n                        onClick={props.addTask}\r\n                        className='btn btn-lg btn-success'>Add Task</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n// finally Export this Module \r\nexport default AddTaskForm","import React from 'react'\r\n\r\n// -----------UpdateForm Component------------// \r\nconst UpdateForm = (props) => {\r\n    // ------props object we got updateData , cancelUpdate , updateTask ---------//\r\n    return (\r\n        <>\r\n            {/* Update Task  */}\r\n            < div className=\"row mb-3\">\r\n                <div className=\"col\">\r\n                    <input type=\"text\"\r\n                        value={props.updateData && props.updateData.title}\r\n                        onChange={props.changeTask}\r\n                        className='form-control form-control-sm'\r\n                    />\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    {/* update btn  */}\r\n                    <button\r\n                        onClick={props.updateTask}\r\n                        className=\"btn btn-sm btn-success mr-20\">\r\n                        Update\r\n                    </button>\r\n                    {/* cancel btn  */}\r\n                    <button className=\"btn btn-sm btn-warning\"\r\n                        onClick={props.cancelUpdate}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// finally exprts this module \r\nexport default UpdateForm","import React from 'react'\r\n//--------importing some module for icons -------//\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// -----------ToDo Component--------------------//\r\nconst ToDo = (props) => {\r\n    return (\r\n        //   ---Here We Got props object as toDo , mrakDone deleteTask---------//\r\n        <>\r\n            {\r\n                props.toDo.map((task, index) => {\r\n                    return (\r\n                        <React.Fragment key={task.id}>\r\n\r\n                            <div className=\"col taskBg\">\r\n                                {/* setting class name on Complete Condition  */}\r\n                                <div className={task.completed ? 'done' : ''}>\r\n                                    <span className=\"taskNumber\">{index + 1}</span>\r\n                                    <span className=\"taskText\">{task.title}</span>\r\n                                </div>\r\n                                <div className=\"iconsWrap\">\r\n                                    {/* on Clicking markDone Functin is Called in Parent Component by task.id Arguments  */}\r\n                                    <span title='Completed / Not Completed'\r\n                                        onClick={(e) => props.markDone(task.id)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faCircleCheck} />\r\n                                    </span>\r\n                                    {/* checking Task Is Compleated Or Not  */}\r\n                                    {\r\n                                        task.completed ? null : (\r\n                                            <span title='Edit'\r\n                                                onClick={() => props.setUpdateData({\r\n                                                    id: task.id,\r\n                                                    title: task.title,\r\n                                                    completed: task.completed ? true : false\r\n                                                })}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faPen} />\r\n                                            </span>)\r\n                                    }\r\n                                    <span title='Delete'\r\n                                        onClick={() => props.deleteTask(task.id)}\r\n                                    >\r\n                                        {/* trash Icon for Deleting Single todo  */}\r\n                                        <FontAwesomeIcon icon={faTrashCan} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDo","import React, { useState } from 'react';\r\nimport './TodoContainer.css'\r\n\r\n//----------import AddTaskForm , UpdateForm , ToDo Component --------//\r\nimport AddTaskForm from './toDos/AddTaskForm'\r\nimport UpdateForm from './toDos/UpdateForm'\r\nimport ToDo from './toDos/ToDo'\r\n\r\n//-------------importting BootStrap Module--------------------//\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// ------------TodoContainer Component------------------------//\r\nfunction TodoContainer(props) {\r\n\r\n    //----------- Task Todo List State -------------------//\r\n    const [toDo, setToDo] = useState(props.jsonTodos);\r\n    //------------- Temp State ---------------------------//\r\n    const [newTask, setNewTask] = useState('');\r\n    const [updateData, setUpdateData] = useState('');\r\n\r\n\r\n    //------------ Add task -------------------//\r\n    const addTask = () => {\r\n        if (newTask) {\r\n            let newEntry = {\r\n                id: Date.now(),\r\n                title: newTask,\r\n                completed: false\r\n            }\r\n            setToDo([newEntry, ...toDo])\r\n            setNewTask('');\r\n        }\r\n    }\r\n\r\n    //--------------Delete Task -----------------//\r\n    const deleteTask = (id) => {\r\n        let newTasks = toDo.filter(task => task.id !== id);\r\n        setToDo(newTasks)\r\n    }\r\n\r\n    //-------New Task as Done and Complete--------//\r\n    const markDone = (id) => {\r\n        let completeTask = toDo.map(task => {\r\n            if (task.id === id) {\r\n                return ({ ...task, completed: !task.completed });\r\n            }\r\n            return task;\r\n        })\r\n        setToDo(completeTask)\r\n    }\r\n    //--------Cancel update---------------------//\r\n    const cancelUpdate = () => {\r\n        setUpdateData('');\r\n    }\r\n\r\n    //--------Change task for update --------//\r\n    const changeTask = (e) => {\r\n        let newEntry = {\r\n            id: updateData.id,\r\n            title: e.target.value,\r\n            completed: updateData.completed ? true : false\r\n        }\r\n        setUpdateData(newEntry);\r\n    }\r\n\r\n    //---------Update Task -----------------//\r\n    const updateTask = () => {\r\n        let filterRecord = [...toDo].filter(task => task.id !== updateData.id)\r\n        let UpdatedObject = [updateData, ...filterRecord];\r\n        setToDo(UpdatedObject);\r\n        setUpdateData('')\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* heading of ToDo App  */}\r\n            <h2 id='todo-heading'>React ToDo App (fetching API)</h2>\r\n            <div className=\"container App\">\r\n\r\n                {/*Rendering Two Comp updating Task  && for Adding a New Task  */}\r\n                {\r\n                    updateData && updateData ? (\r\n                        <UpdateForm\r\n                            updateData={updateData}\r\n                            changeTask={changeTask}\r\n                            updateTask={updateTask}\r\n                            cancelUpdate={cancelUpdate}\r\n\r\n                        />\r\n                    ) : (\r\n                        <AddTaskForm\r\n                            newTask={newTask}\r\n                            setNewTask={setNewTask}\r\n                            addTask={addTask}\r\n                        />\r\n                    )\r\n                }\r\n\r\n                {/* Display ToDos  */}\r\n                <ToDo\r\n                    toDo={toDo}\r\n                    markDone={markDone}\r\n                    setUpdateData={setUpdateData}\r\n                    deleteTask={deleteTask}\r\n                />\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\n//-----------finally Export This File-------------//\r\nexport default TodoContainer;","// -----------importing react , useEffect and useState hooks --------//\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport './App.css'\r\n//---------------import TodoContainer Component-----------------------//\r\nimport TodoContainer from './Components/TodoContainer'\r\n// --------------------Bars for loading wait animation ---------------//\r\nimport { Bars } from \"react-loader-spinner\";\r\n\r\n\r\n\r\n// ----------main Component of this Todo App -------------------------//\r\nconst App = () => {\r\n\r\n    //------after loading json we put whole object in json of useState----//\r\n    const [json, setjson] = useState([]);\r\n    //------rendering whole App component after loading ----------------//\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    //--------useEffect hook with empty Array dependendency means --------\r\n    //-----fetching api with no side effect for disturb our app----------\r\n    useEffect(() => {\r\n        // inbuilt function for fetch API \r\n        fetch(\"https://jsonplaceholder.typicode.com/todos\")\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setTimeout(() => {\r\n                    // after fething json we update json with calling this function\r\n                    // setJson that change value of json With help of useEffect Hook\r\n                    setjson(json)\r\n                    setLoading(true);\r\n                }, 1000);\r\n                //    console.log(json)\r\n            });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* after loading Api rendering TodoContainer Component If not ! then Show thw Waiting Bar  */}\r\n            {loading ? (\r\n                <TodoContainer jsonTodos={json} />\r\n            ) : (\r\n                <Bars height=\"180\" width=\"180\" color=\"#4fa94d\" ariaLabel=\"bars-loading\" visible={true} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\n// -----------import  reactDOM -------------//\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n// ----------create root -----------------//\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n"],"sourceRoot":""}